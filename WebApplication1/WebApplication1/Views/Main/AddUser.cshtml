@model WebApplication1.Database.Users
@using WebApplication1.Database
@{
    ViewBag.Title = "הוסף משתמש";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
@{
    List<WebApplication1.Database.Roles> rl;
    List<WebApplication1.Database.Statuses> sl;
    List<WebApplication1.Database.Units> ul;
    using (TimchurDatabaseEntities ent = new TimchurDatabaseEntities())
    {
        rl = ent.Roles.ToList();
        sl = ent.Statuses.ToList();
        ul = ent.Units.ToList();
    }
    List<SelectListItem> rlsl = new List<SelectListItem>();
    foreach (WebApplication1.Database.Roles rli in rl)
    {
        SelectListItem item = new SelectListItem()
        {
            Text = rli.Name,
            Value = (rli.ID).ToString(),
            Selected = false,
        };
        rlsl.Add(item);
    }
    List<SelectListItem> ulsl = new List<SelectListItem>();
    foreach (WebApplication1.Database.Units uli in ul)
    {
        SelectListItem item = new SelectListItem()
        {
            Text = uli.Name,
            Value = (uli.ID).ToString(),
            Selected = false,
        };
        ulsl.Add(item);
    }
    List<SelectListItem> slsl = new List<SelectListItem>();
    foreach (WebApplication1.Database.Statuses sli in sl)
    {
        SelectListItem item = new SelectListItem()
        {
            Text = sli.Name,
            Value = (sli.ID).ToString(),
            Selected = false,
        };
        slsl.Add(item);

    }
    var x = 0;
    using (TimchurDatabaseEntities entit = new TimchurDatabaseEntities())
    {
        if (Model != null && Model.IDCardNumber != null)
        {
            if (entit.Users.Where(x2 => x2.IDCardNumber == Model.IDCardNumber).Count() > 0)
            {
                x = entit.Users.Where(x2 => x2.IDCardNumber == Model.IDCardNumber).ToList().First().ID;

            }
        }
    }
}
<script>
    function ex_co()
    {
        var r = confirm("האם אתה בטוח שאתה רוצה לבטל?");
        if (r == true) {
            $('form')
  .trigger('reset');
        } else {

        }
    }
</script>
@if (ViewData.ModelState.Keys.Contains("Exist"))
{
    <script>
        var r = confirm("הפריט קיים במסד,האם תרצה לערוך אותו?");
        if (r == true) {
            window.location = "/Main/EditUser/"+@x ;
        } else {

        }

    </script>
}
<style>
    input.input-validation-error,
    textarea.input-validation-error,
    select.input-validation-error {
        background: #FEF1EC;
        border: 1px solid #CD0A0A;
    }
  .table-borderless tbody tr td,
.table-borderless tbody tr th,
.table-borderless thead tr th,
.table-borderless thead tr td,
.table-borderless tfoot tr th,
.table-borderless tfoot tr td {
    border: none;
}

  #bar {
  border-right: 1px dashed #333;
}
</style>
@section Code1
{
    var full="מערכת שליפת ספקים לתיחור – רשימת משתמשים מורשים" + dstr;
    var table = $('.tabExcel').DataTable({
    buttons: ['copy', {
    extend: 'excel',
    title: full
    }],
    "oLanguage": {
    "sUrl": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Hebrew.json"
    },
    "dom": "<'row'<'col-sm-12'tr>><'row'<'col-sm-5'><'col-sm-2'i><'col-sm-5'>><'row'<'col-sm-4'><'col-sm-2'f><'col-sm-2'B><'col-sm-4'>><'row'<'col-sm-5'><'col-sm-2'p><'col-sm-5'>>"

    });

}
<meta charset="ISO-8859-1">

<div class="row">
    <div class="col-lg-6">
        <h4>&nbsp;&nbsp;&nbsp; הוספת משתמש חדש</h4>
    </div>
    <div class="col-lg-offset-5 pull-right"><button onclick="ex_co()" class="btn btn-default">איפוס</button></div>

</div>
@using (Html.BeginHorizontalForm())
{




    <hr />
    <div class="col-sm-offset-4">
        @if (!ViewData.ModelState.IsValid)
        {
            <h4>שגיאות:</h4>
        }
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    </div>
    <div class="col-sm-4"></div>
   <table class="table col-sm-3 table-borderless">

       <tr>
           <td>
               @Html.LabelFor(model => model.IDCardNumber, "ת.ז.:", new { @class = "control-label" })
           </td>
           <td>
               @Html.EditorFor(model => model.IDCardNumber, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessage("IDCardNumber", "", new { @class = "text-danger" })
           </td>
           <td>
    
  
        <div id="bar" class="mycontent-right"><p style="font-size:xx-small"> 9 ספרות </p>
         
        </div>
    </td>
       </tr>
       <tr>
           <td>
               @Html.LabelFor(model => model.PhoneNumber, "טלפון:", new { @class = "control-label" })
</td>
           <td>@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessage("PhoneNumber", "", new { @class = "text-danger" })</td>
           <td><div id="bar" class="mycontent-right">
    <p style="font-size:xx-small">9 ספרות לפחות כולל קידומת</p>

</div></td>
       </tr>
       <tr>
           <td>@Html.LabelFor(model => model.Password, "סיסמא:", new { @class = "control-label" })</td>
           <td>@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessage("Password", "", new { @class = "text-danger" })</td>
           <td><div id="bar" class="mycontent-right">
    <p style="font-size:xx-small">מומלץ שילוב של אותיות וספרות</p>

</div></td>
       </tr>
       <tr>
           <td>@Html.LabelFor(model => model.StatusID, "סטאטוס:", new { @class = "control-label" })</td>
           <td>@Html.DropDownListFor(model => model.StatusID, slsl, "בחר/י ערך", new { @class = "form-control" })
        @Html.ValidationMessage("StatusID", "", new { @class = "text-danger" })

</td>
           <td><div id="bar" class="mycontent-right">
   <!--<p style="font-size:xx-small">הערה כלשהיא לגביי התוכן של הטקסט</p>-->

</div></td>
       </tr>
       <tr>
           <td>@Html.LabelFor(model => model.FullName, "שם מלא:", new { @class = "control-label" })</td>
           <td>@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessage("FullName", "", new { @class = "text-danger" })</td>
           <td><div id="bar" class="mycontent-right">
    <!--<p style="font-size:xx-small">הערה כלשהיא לגביי התוכן של הטקסט</p>-->

</div></td>
       </tr>
       <tr>
           <td>@Html.LabelFor(model => model.Email, "אימייל:", new { @class = "control-label" })</td>
           <td>
               @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
           @Html.ValidationMessage("Email", "", new { @class = "text-danger" })
       </td>
       <td>
           <div id="bar" class="mycontent-right">
               <p style="font-size:xx-small">הפורמט המתאים הוא ***@Html.Raw("@")***.*** </p>

           </div>
       </td>
   </tr>
       <tr>
           <td>@Html.LabelFor(model => model.RoleID, "תפקיד:", new { @class = "control-label" })</td>
           <td>@Html.DropDownListFor(model => model.RoleID, rlsl, "בחר/י ערך", new { @class = "form-control" })
        @Html.ValidationMessage("RoleID", "", new { @class = "text-danger" })</td>
           <td>
               <div id="bar" class="mycontent-right">
                   <!--<p style="font-size:xx-small">הערה כלשהיא לגביי התוכן של הטקסט</p>-->

               </div>
           </td>
       </tr>
       <tr>
           <td>
               @Html.LabelFor(model => model.UnitID, "יחידה:", new { @class = "control-label" })</td>
           <td>@Html.DropDownListFor(model => model.UnitID, ulsl, "בחר/י ערך", new { @class = "form-control" })
        @Html.ValidationMessage("UnitID", "", new { @class = "text-danger" })</td>
           <td><div id="bar" class="mycontent-right">
                   <!--<p style="font-size:xx-small">הערה כלשהיא לגביי התוכן של הטקסט</p>-->

</div></td>
       </tr>
       <tr>
           <td></td>
           <td><input type="submit" value="שמירה" class="btn btn-default" /></td>
           <td></td>
       </tr>
   </table>
<div class="col-sm-5"></div>
 




























}


